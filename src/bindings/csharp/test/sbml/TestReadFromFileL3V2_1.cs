///  @file    TestReadFromFileL3V2_1.cs
///  @brief   Reads test-data/l3v2-no-model.xml into memory and tests it.
///  @author  Frank Bergmann (Csharp conversion)
///  @author  Akiya Jouraku (Csharp conversion)
///  @author  Sarah Keating 
///  
///  ====== WARNING ===== WARNING ===== WARNING ===== WARNING ===== WARNING ======
/// 
///  DO NOT EDIT THIS FILE.
/// 
///  This file was generated automatically by converting the file located at
///  src/sbml/test/TestReadFromFileL3V2_1.cpp
///  using the conversion program dev/utilities/translateTests/translateTests.pl.
///  Any changes made here will be lost the next time the file is regenerated.
/// 
///  -----------------------------------------------------------------------------
///  This file is part of libSBML.  Please visit http://sbml.org for more
///  information about SBML, and the latest version of libSBML.
/// 
///  Copyright 2005-2010 California Institute of Technology.
///  Copyright 2002-2005 California Institute of Technology and
///                      Japan Science and Technology Corporation.
///  
///  This library is free software; you can redistribute it and/or modify it
///  under the terms of the GNU Lesser General Public License as published by
///  the Free Software Foundation.  A copy of the license agreement is provided
///  in the file named "LICENSE.txt" included with this software distribution
///  and also available online as http://sbml.org/software/libsbml/license.html
///  -----------------------------------------------------------------------------


namespace LibSBMLCSTest.sbml {

  using libsbmlcs;

  using System;

  using System.IO;

  public class TestReadFromFileL3V2_1 {
    public class AssertionError : System.Exception 
    {
      public AssertionError() : base()
      {
        
      }
    }


    static void assertTrue(bool condition)
    {
      if (condition == true)
      {
        return;
      }
      throw new AssertionError();
    }

    static void assertEquals(object a, object b)
    {
      if ( (a == null) && (b == null) )
      {
        return;
      }
      else if ( (a == null) || (b == null) )
      {
        throw new AssertionError();
      }
      else if (a.Equals(b))
      {
        return;
      }
  
      throw new AssertionError();
    }

    static void assertNotEquals(object a, object b)
    {
      if ( (a == null) && (b == null) )
      {
        throw new AssertionError();
      }
      else if ( (a == null) || (b == null) )
      {
        return;
      }
      else if (a.Equals(b))
      {
        throw new AssertionError();
      }
    }

    static void assertEquals(bool a, bool b)
    {
      if ( a == b )
      {
        return;
      }
      throw new AssertionError();
    }

    static void assertNotEquals(bool a, bool b)
    {
      if ( a != b )
      {
        return;
      }
      throw new AssertionError();
    }

    static void assertEquals(int a, int b)
    {
      if ( a == b )
      {
        return;
      }
      throw new AssertionError();
    }

    static void assertNotEquals(int a, int b)
    {
      if ( a != b )
      {
        return;
      }
      throw new AssertionError();
    }


    public void test_echo_l3v2_no_model()
    {
      string expected = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + 
    "<sbml xmlns=\"http://www.sbml.org/sbml/level3/version2/core\" " + 
    "level=\"3\" version=\"2\"/>\n";
      string filename =  "../../sbml/sbml/test/test-data/";
      filename += "l3v2-no-model.xml";
      string fileout =  "../../sbml/sbml/test/test-data/";
      fileout += "tempOut.xml";
      SBMLDocument d = libsbml.readSBML();
      if (d == null);
      {
      }
      libsbml.writeSBML(d);
      SBMLDocument outD = libsbml.readSBML();
      assertTrue( d.getModel() == null );
      assertTrue( outD.getModel() == null );
      string S = libsbml.writeSBMLToString(outD);
      assertEquals( true, equals(expected,S) );
      d = null;
      outD = null;
    }

    public void test_read_l3v2_no_model()
    {
      SBMLReader reader = new SBMLReader();
      SBMLDocument d;
      Model m;
      string filename =  "../../sbml/sbml/test/test-data/";
      filename += "l3v2-no-model.xml";
      d = reader.readSBML(filename);
      if (d == null);
      {
      }
      assertTrue( d.getLevel() == 3 );
      assertTrue( d.getVersion() == 2 );
      m = d.getModel();
      assertTrue( m == null );
      d = null;
    }

  }
}
