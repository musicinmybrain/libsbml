# @file    TestReadFromFileL3V2_1.rb
# @brief   Reads test-data/l3v2-no-model.xml into memory and tests it.
#
# @author  Akiya Jouraku (Ruby conversion)
# @author  Sarah Keating 
# 
# ====== WARNING ===== WARNING ===== WARNING ===== WARNING ===== WARNING ======
#
# DO NOT EDIT THIS FILE.
#
# This file was generated automatically by converting the file located at
# src/sbml/test/TestReadFromFileL3V2_1.cpp
# using the conversion program dev/utilities/translateTests/translateTests.pl.
# Any changes made here will be lost the next time the file is regenerated.
#
# -----------------------------------------------------------------------------
# This file is part of libSBML.  Please visit http://sbml.org for more
# information about SBML, and the latest version of libSBML.
#
# Copyright 2005-2010 California Institute of Technology.
# Copyright 2002-2005 California Institute of Technology and
#                     Japan Science and Technology Corporation.
# 
# This library is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation.  A copy of the license agreement is provided
# in the file named "LICENSE.txt" included with this software distribution
# and also available online as http://sbml.org/software/libsbml/license.html
# -----------------------------------------------------------------------------
require 'test/unit'
require 'libSBML'

class TestReadFromFileL3V2_1 < Test::Unit::TestCase

  def test_echo_l3v2_no_model
    expected = "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n" + 
    "<sbml xmlns=\"http://www.sbml.org/sbml/level3/version2/core\" " + 
    "level=\"3\" version=\"2\"/>\n"
    filename = "../../sbml/sbml/test/test-data/"
    filename += "l3v2-no-model.xml"
    fileout = "../../sbml/sbml/test/test-data/"
    fileout += "tempOut.xml"
    d = LibSBML::readSBML()
    if (d == nil)
    end
    LibSBML::writeSBML(d)
    outD = LibSBML::readSBML()
    assert( d.getModel() == nil )
    assert( outd.getModel() == nil )
    S = LibSBML::writeSBMLToString(outD)
    assert_equal true, equals(expected,S)
    d = nil
    outD = nil
  end

  def test_read_l3v2_no_model
    reader = LibSBML::SBMLReader.new()
    filename = "../../sbml/sbml/test/test-data/"
    filename += "l3v2-no-model.xml"
    d = reader.readSBML(filename)
    if (d == nil)
    end
    assert( d.getLevel() == 3 )
    assert( d.getVersion() == 2 )
    m = d.getModel()
    assert( m == nil )
    d = nil
  end

end
