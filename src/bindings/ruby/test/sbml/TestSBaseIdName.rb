# @file    TestSBaseIdName.rb
# @brief   SBase unit tests
#
# @author  Akiya Jouraku (Ruby conversion)
# @author  Ben Bornstein 
# 
# ====== WARNING ===== WARNING ===== WARNING ===== WARNING ===== WARNING ======
#
# DO NOT EDIT THIS FILE.
#
# This file was generated automatically by converting the file located at
# src/sbml/test/TestSBaseIdName.cpp
# using the conversion program dev/utilities/translateTests/translateTests.pl.
# Any changes made here will be lost the next time the file is regenerated.
#
# -----------------------------------------------------------------------------
# This file is part of libSBML.  Please visit http://sbml.org for more
# information about SBML, and the latest version of libSBML.
#
# Copyright 2005-2010 California Institute of Technology.
# Copyright 2002-2005 California Institute of Technology and
#                     Japan Science and Technology Corporation.
# 
# This library is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation.  A copy of the license agreement is provided
# in the file named "LICENSE.txt" included with this software distribution
# and also available online as http://sbml.org/software/libsbml/license.html
# -----------------------------------------------------------------------------
require 'test/unit'
require 'libSBML'

class TestSBaseIdName < Test::Unit::TestCase

  def setup
    @@s31 = LibSBML::Species.new(3,1)
    if (@@s31 == nil)
    end
    @@s32 = LibSBML::Species.new(3,2)
    if (@@s32 == nil)
    end
    @@e31 = LibSBML::Event.new(3,1)
    if (@@e31 == nil)
    end
    @@e32 = LibSBML::Event.new(3,2)
    if (@@e32 == nil)
    end
    @@u31 = LibSBML::Unit.new(3,1)
    if (@@u31 == nil)
    end
    @@u32 = LibSBML::Unit.new(3,2)
    if (@@u32 == nil)
    end
    @@ar31 = LibSBML::AssignmentRule.new(3,1)
    if (@@ar31 == nil)
    end
    @@ar32 = LibSBML::AssignmentRule.new(3,2)
    if (@@ar32 == nil)
    end
    @@ea31 = LibSBML::EventAssignment.new(3,1)
    if (@@ea31 == nil)
    end
    @@ea32 = LibSBML::EventAssignment.new(3,2)
    if (@@ea32 == nil)
    end
  end

  def teardown
    @@s31 = nil
    @@s32 = nil
    @@e31 = nil
    @@e32 = nil
    @@u31 = nil
    @@u32 = nil
    @@ar31 = nil
    @@ar32 = nil
    @@ea31 = nil
    @@ea32 = nil
  end

  def test_SBase_setIdAttribute_1
    id =  "x12345";
    i = @@s31.setIdAttribute(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal true, @@s31.isSetId()
    assert( @@s31.getId() == id )
    assert_equal true, @@s31.isSetIdAttribute()
    assert( @@s31.getIdAttribute() == id )
    i = @@s31.unsetIdAttribute()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@s31.isSetId()
    assert( @@s31.getId() ==  "" )
    assert_equal false, @@s31.isSetIdAttribute()
    assert( @@s31.getIdAttribute() ==  "" )
  end

  def test_SBase_setIdAttribute_10
    id =  "x12345";
    i = @@ea32.setIdAttribute(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@ea32.isSetId()
    assert( @@ea32.getId() ==  "" )
    assert_equal true, @@ea32.isSetIdAttribute()
    assert( @@ea32.getIdAttribute() == id )
    assert_equal false, @@ea32.isSetVariable()
    assert( @@ea32.getVariable() ==  "" )
    i = @@ea32.unsetIdAttribute()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@ea32.isSetId()
    assert( @@ea32.getId() ==  "" )
    assert_equal false, @@ea32.isSetIdAttribute()
    assert( @@ea32.getIdAttribute() ==  "" )
    assert_equal false, @@ea32.isSetVariable()
    assert( @@ea32.getVariable() ==  "" )
  end

  def test_SBase_setIdAttribute_2
    id =  "x12345";
    i = @@s32.setIdAttribute(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal true, @@s32.isSetId()
    assert( @@s32.getId() == id )
    assert_equal true, @@s32.isSetIdAttribute()
    assert( @@s32.getIdAttribute() == id )
    i = @@s32.unsetIdAttribute()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@s32.isSetId()
    assert( @@s32.getId() ==  "" )
    assert_equal false, @@s32.isSetIdAttribute()
    assert( @@s32.getIdAttribute() ==  "" )
  end

  def test_SBase_setIdAttribute_3
    id =  "x12345";
    i = @@e31.setIdAttribute(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal true, @@e31.isSetId()
    assert( @@e31.getId() == id )
    assert_equal true, @@e31.isSetIdAttribute()
    assert( @@e31.getIdAttribute() == id )
    i = @@e31.unsetIdAttribute()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@e31.isSetId()
    assert( @@e31.getId() ==  "" )
    assert_equal false, @@e31.isSetIdAttribute()
    assert( @@e31.getIdAttribute() ==  "" )
  end

  def test_SBase_setIdAttribute_4
    id =  "x12345";
    i = @@e32.setIdAttribute(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal true, @@e32.isSetId()
    assert( @@e32.getId() == id )
    assert_equal true, @@e32.isSetIdAttribute()
    assert( @@e32.getIdAttribute() == id )
    i = @@e32.unsetIdAttribute()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@e32.isSetId()
    assert( @@e32.getId() ==  "" )
    assert_equal false, @@e32.isSetIdAttribute()
    assert( @@e32.getIdAttribute() ==  "" )
  end

  def test_SBase_setIdAttribute_5
    id =  "x12345";
    i = @@u31.setIdAttribute(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@u31.isSetId()
    assert( @@u31.getId() ==  "" )
    assert_equal true, @@u31.isSetIdAttribute()
    assert( @@u31.getIdAttribute() == id )
    i = @@u31.unsetIdAttribute()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@u31.isSetId()
    assert( @@u31.getId() ==  "" )
    assert_equal false, @@u31.isSetIdAttribute()
    assert( @@u31.getIdAttribute() ==  "" )
  end

  def test_SBase_setIdAttribute_6
    id =  "x12345";
    i = @@u32.setIdAttribute(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal true, @@u32.isSetId()
    assert( @@u32.getId() == id )
    assert_equal true, @@u32.isSetIdAttribute()
    assert( @@u32.getIdAttribute() == id )
    i = @@u32.unsetIdAttribute()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@u32.isSetId()
    assert( @@u32.getId() ==  "" )
    assert_equal false, @@u32.isSetIdAttribute()
    assert( @@u32.getIdAttribute() ==  "" )
  end

  def test_SBase_setIdAttribute_7
    id =  "x12345";
    i = @@ar31.setIdAttribute(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@ar31.isSetId()
    assert( @@ar31.getId() ==  "" )
    assert_equal true, @@ar31.isSetIdAttribute()
    assert( @@ar31.getIdAttribute() == id )
    assert_equal false, @@ar31.isSetVariable()
    assert( @@ar31.getVariable() ==  "" )
    i = @@ar31.unsetIdAttribute()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@ar31.isSetId()
    assert( @@ar31.getId() ==  "" )
    assert_equal false, @@ar31.isSetIdAttribute()
    assert( @@ar31.getIdAttribute() ==  "" )
    assert_equal false, @@ar31.isSetVariable()
    assert( @@ar31.getVariable() ==  "" )
  end

  def test_SBase_setIdAttribute_8
    id =  "x12345";
    i = @@ar32.setIdAttribute(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@ar32.isSetId()
    assert( @@ar32.getId() ==  "" )
    assert_equal true, @@ar32.isSetIdAttribute()
    assert( @@ar32.getIdAttribute() == id )
    assert_equal false, @@ar32.isSetVariable()
    assert( @@ar32.getVariable() ==  "" )
    i = @@ar32.unsetIdAttribute()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@ar32.isSetId()
    assert( @@ar32.getId() ==  "" )
    assert_equal false, @@ar32.isSetIdAttribute()
    assert( @@ar32.getIdAttribute() ==  "" )
    assert_equal false, @@ar32.isSetVariable()
    assert( @@ar32.getVariable() ==  "" )
  end

  def test_SBase_setIdAttribute_9
    id =  "x12345";
    i = @@ea31.setIdAttribute(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@ea31.isSetId()
    assert( @@ea31.getId() ==  "" )
    assert_equal true, @@ea31.isSetIdAttribute()
    assert( @@ea31.getIdAttribute() == id )
    assert_equal false, @@ea31.isSetVariable()
    assert( @@ea31.getVariable() ==  "" )
    i = @@ea31.unsetIdAttribute()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@ea31.isSetId()
    assert( @@ea31.getId() ==  "" )
    assert_equal false, @@ea31.isSetIdAttribute()
    assert( @@ea31.getIdAttribute() ==  "" )
    assert_equal false, @@ea31.isSetVariable()
    assert( @@ea31.getVariable() ==  "" )
  end

  def test_SBase_setId_1
    id =  "x12345";
    i = @@s31.setId(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal true, @@s31.isSetId()
    assert( @@s31.getId() == id )
    assert_equal true, @@s31.isSetIdAttribute()
    assert( @@s31.getIdAttribute() == id )
    i = @@s31.unsetId()
    assert( i == LibSBML::LIBSBML_OPERATION_FAILED )
    assert_equal true, @@s31.isSetId()
    assert( @@s31.getId() == id )
    assert_equal true, @@s31.isSetIdAttribute()
    assert( @@s31.getIdAttribute() == id )
  end

  def test_SBase_setId_10
    id =  "x12345";
    i = @@ea32.setId(id)
    assert( i == LibSBML::LIBSBML_USE_ID_ATTRIBUTE_FUNCTION )
    assert_equal false, @@ea32.isSetId()
    assert( @@ea32.getId() ==  "" )
    assert_equal false, @@ea32.isSetIdAttribute()
    assert( @@ea32.getIdAttribute() ==  "" )
    assert_equal false, @@ea32.isSetVariable()
    assert( @@ea32.getVariable() ==  "" )
    i = @@ea32.unsetId()
    assert( i == LibSBML::LIBSBML_USE_ID_ATTRIBUTE_FUNCTION )
    assert_equal false, @@ea32.isSetId()
    assert( @@ea32.getId() ==  "" )
    assert_equal false, @@ea32.isSetIdAttribute()
    assert( @@ea32.getIdAttribute() ==  "" )
    assert_equal false, @@ea32.isSetVariable()
    assert( @@ea32.getVariable() ==  "" )
  end

  def test_SBase_setId_2
    id =  "x12345";
    i = @@s32.setId(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal true, @@s32.isSetId()
    assert( @@s32.getId() == id )
    assert_equal true, @@s32.isSetIdAttribute()
    assert( @@s32.getIdAttribute() == id )
    i = @@s32.unsetId()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@s32.isSetId()
    assert( @@s32.getId() ==  "" )
    assert_equal false, @@s32.isSetIdAttribute()
    assert( @@s32.getIdAttribute() ==  "" )
  end

  def test_SBase_setId_3
    id =  "x12345";
    i = @@e31.setId(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal true, @@e31.isSetId()
    assert( @@e31.getId() == id )
    assert_equal true, @@e31.isSetIdAttribute()
    assert( @@e31.getIdAttribute() == id )
    i = @@e31.unsetId()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@e31.isSetId()
    assert( @@e31.getId() ==  "" )
    assert_equal false, @@e31.isSetIdAttribute()
    assert( @@e31.getIdAttribute() ==  "" )
  end

  def test_SBase_setId_4
    id =  "x12345";
    i = @@e32.setId(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal true, @@e32.isSetId()
    assert( @@e32.getId() == id )
    assert_equal true, @@e32.isSetIdAttribute()
    assert( @@e32.getIdAttribute() == id )
    i = @@e32.unsetId()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@e32.isSetId()
    assert( @@e32.getId() ==  "" )
    assert_equal false, @@e32.isSetIdAttribute()
    assert( @@e32.getIdAttribute() ==  "" )
  end

  def test_SBase_setId_5
    id =  "x12345";
    i = @@u31.setId(id)
    assert( i == LibSBML::LIBSBML_UNEXPECTED_ATTRIBUTE )
    assert_equal false, @@u31.isSetId()
    assert( @@u31.getId() ==  "" )
    assert_equal false, @@u31.isSetIdAttribute()
    assert( @@u31.getIdAttribute() ==  "" )
    i = @@u31.unsetId()
    assert( i == LibSBML::LIBSBML_OPERATION_FAILED )
    assert_equal false, @@u31.isSetId()
    assert( @@u31.getId() ==  "" )
    assert_equal false, @@u31.isSetIdAttribute()
    assert( @@u31.getIdAttribute() ==  "" )
  end

  def test_SBase_setId_6
    id =  "x12345";
    i = @@u32.setId(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal true, @@u32.isSetId()
    assert( @@u32.getId() == id )
    assert_equal true, @@u32.isSetIdAttribute()
    assert( @@u32.getIdAttribute() == id )
    i = @@u32.unsetId()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@u32.isSetId()
    assert( @@u32.getId() ==  "" )
    assert_equal false, @@u32.isSetIdAttribute()
    assert( @@u32.getIdAttribute() ==  "" )
  end

  def test_SBase_setId_7
    id =  "x12345";
    i = @@ar31.setId(id)
    assert( i == LibSBML::LIBSBML_UNEXPECTED_ATTRIBUTE )
    assert_equal false, @@ar31.isSetId()
    assert( @@ar31.getId() ==  "" )
    assert_equal false, @@ar31.isSetIdAttribute()
    assert( @@ar31.getIdAttribute() ==  "" )
    assert_equal false, @@ar31.isSetVariable()
    assert( @@ar31.getVariable() ==  "" )
    i = @@ar31.unsetId()
    assert( i == LibSBML::LIBSBML_OPERATION_FAILED )
    assert_equal false, @@ar31.isSetId()
    assert( @@ar31.getId() ==  "" )
    assert_equal false, @@ar31.isSetIdAttribute()
    assert( @@ar31.getIdAttribute() ==  "" )
    assert_equal false, @@ar31.isSetVariable()
    assert( @@ar31.getVariable() ==  "" )
  end

  def test_SBase_setId_8
    id =  "x12345";
    i = @@ar32.setId(id)
    assert( i == LibSBML::LIBSBML_USE_ID_ATTRIBUTE_FUNCTION )
    assert_equal false, @@ar32.isSetId()
    assert( @@ar32.getId() ==  "" )
    assert_equal false, @@ar32.isSetIdAttribute()
    assert( @@ar32.getIdAttribute() ==  "" )
    assert_equal false, @@ar32.isSetVariable()
    assert( @@ar32.getVariable() ==  "" )
    i = @@ar32.unsetId()
    assert( i == LibSBML::LIBSBML_USE_ID_ATTRIBUTE_FUNCTION )
    assert_equal false, @@ar32.isSetId()
    assert( @@ar32.getId() ==  "" )
    assert_equal false, @@ar32.isSetIdAttribute()
    assert( @@ar32.getIdAttribute() ==  "" )
    assert_equal false, @@ar32.isSetVariable()
    assert( @@ar32.getVariable() ==  "" )
  end

  def test_SBase_setId_9
    id =  "x12345";
    i = @@ea31.setId(id)
    assert( i == LibSBML::LIBSBML_UNEXPECTED_ATTRIBUTE )
    assert_equal false, @@ea31.isSetId()
    assert( @@ea31.getId() ==  "" )
    assert_equal false, @@ea31.isSetIdAttribute()
    assert( @@ea31.getIdAttribute() ==  "" )
    assert_equal false, @@ea31.isSetVariable()
    assert( @@ea31.getVariable() ==  "" )
    i = @@ea31.unsetId()
    assert( i == LibSBML::LIBSBML_OPERATION_FAILED )
    assert_equal false, @@ea31.isSetId()
    assert( @@ea31.getId() ==  "" )
    assert_equal false, @@ea31.isSetIdAttribute()
    assert( @@ea31.getIdAttribute() ==  "" )
    assert_equal false, @@ea31.isSetVariable()
    assert( @@ea31.getVariable() ==  "" )
  end

  def test_SBase_setName_1
    name =  "x12345";
    @@s31.setName(name)
    assert (( name == @@s31.getName() ))
    assert_equal true, @@s31.isSetName()
    if (@@s31.getName() == name)
    end
    @@s31.setName(@@s31.getName())
    assert (( name == @@s31.getName() ))
    @@s31.setName("")
    assert_equal false, @@s31.isSetName()
    if (@@s31.getName() != nil)
    end
  end

  def test_SBase_setName_10
    name =  "x12345";
    @@ea32.setName(name)
    assert (( name == @@ea32.getName() ))
    assert_equal true, @@ea32.isSetName()
    if (@@ea32.getName() == name)
    end
    @@ea32.setName(@@ea32.getName())
    assert (( name == @@ea32.getName() ))
    @@ea32.setName("")
    assert_equal false, @@ea32.isSetName()
    if (@@ea32.getName() != nil)
    end
  end

  def test_SBase_setName_2
    name =  "x12345";
    @@s32.setName(name)
    assert (( name == @@s32.getName() ))
    assert_equal true, @@s32.isSetName()
    if (@@s32.getName() == name)
    end
    @@s32.setName(@@s32.getName())
    assert (( name == @@s32.getName() ))
    @@s32.setName("")
    assert_equal false, @@s32.isSetName()
    if (@@s32.getName() != nil)
    end
  end

  def test_SBase_setName_3
    name =  "x12345";
    @@e31.setName(name)
    assert (( name == @@e31.getName() ))
    assert_equal true, @@e31.isSetName()
    if (@@e31.getName() == name)
    end
    @@e31.setName(@@e31.getName())
    assert (( name == @@e31.getName() ))
    @@e31.setName("")
    assert_equal false, @@e31.isSetName()
    if (@@e31.getName() != nil)
    end
  end

  def test_SBase_setName_4
    name =  "x12345";
    @@e32.setName(name)
    assert (( name == @@e32.getName() ))
    assert_equal true, @@e32.isSetName()
    if (@@e32.getName() == name)
    end
    @@e32.setName(@@e32.getName())
    assert (( name == @@e32.getName() ))
    @@e32.setName("")
    assert_equal false, @@e32.isSetName()
    if (@@e32.getName() != nil)
    end
  end

  def test_SBase_setName_5
    name =  "x12345";
    i = @@u31.setName(name)
    assert( i == LibSBML::LIBSBML_UNEXPECTED_ATTRIBUTE )
    assert_equal false, @@u31.isSetName()
    assert( @@u31.getName() == "" )
  end

  def test_SBase_setName_6
    name =  "x12345";
    @@u32.setName(name)
    assert (( name == @@u32.getName() ))
    assert_equal true, @@u32.isSetName()
    if (@@u32.getName() == name)
    end
    @@u32.setName(@@u32.getName())
    assert (( name == @@u32.getName() ))
    @@u32.setName("")
    assert_equal false, @@u32.isSetName()
    if (@@u32.getName() != nil)
    end
  end

  def test_SBase_setName_7
    name =  "x12345";
    i = @@ar31.setName(name)
    assert( i == LibSBML::LIBSBML_UNEXPECTED_ATTRIBUTE )
    assert_equal false, @@ar31.isSetName()
    assert( @@ar31.getName() == "" )
  end

  def test_SBase_setName_8
    name =  "x12345";
    @@ar32.setName(name)
    assert (( name == @@ar32.getName() ))
    assert_equal true, @@ar32.isSetName()
    if (@@ar32.getName() == name)
    end
    @@ar32.setName(@@ar32.getName())
    assert (( name == @@ar32.getName() ))
    @@ar32.setName("")
    assert_equal false, @@ar32.isSetName()
    if (@@ar32.getName() != nil)
    end
  end

  def test_SBase_setName_9
    name =  "x12345";
    i = @@ea31.setName(name)
    assert( i == LibSBML::LIBSBML_UNEXPECTED_ATTRIBUTE )
    assert_equal false, @@ea31.isSetName()
    assert( @@ea31.getName() == "" )
  end

  def test_SBase_setVariable_10
    id =  "x12345";
    i = @@ea31.setVariable(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal true, @@ea31.isSetId()
    assert( @@ea31.getId() == id )
    assert_equal false, @@ea31.isSetIdAttribute()
    assert( @@ea31.getIdAttribute() ==  "" )
    assert_equal true, @@ea31.isSetVariable()
    assert( @@ea31.getVariable() == id )
    i = @@ea31.unsetVariable()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@ea31.isSetId()
    assert( @@ea31.getId() ==  "" )
    assert_equal false, @@ea31.isSetIdAttribute()
    assert( @@ea31.getIdAttribute() ==  "" )
    assert_equal false, @@ea31.isSetVariable()
    assert( @@ea31.getVariable() ==  "" )
  end

  def test_SBase_setVariable_7
    id =  "x12345";
    i = @@ar31.setVariable(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal true, @@ar31.isSetId()
    assert( @@ar31.getId() == id )
    assert_equal false, @@ar31.isSetIdAttribute()
    assert( @@ar31.getIdAttribute() ==  "" )
    assert_equal true, @@ar31.isSetVariable()
    assert( @@ar31.getVariable() == id )
    i = @@ar31.unsetVariable()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@ar31.isSetId()
    assert( @@ar31.getId() ==  "" )
    assert_equal false, @@ar31.isSetIdAttribute()
    assert( @@ar31.getIdAttribute() ==  "" )
    assert_equal false, @@ar31.isSetVariable()
    assert( @@ar31.getVariable() ==  "" )
  end

  def test_SBase_setVariable_8
    id =  "x12345";
    i = @@ar31.setVariable(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal true, @@ar31.isSetId()
    assert( @@ar31.getId() == id )
    assert_equal false, @@ar31.isSetIdAttribute()
    assert( @@ar31.getIdAttribute() ==  "" )
    assert_equal true, @@ar31.isSetVariable()
    assert( @@ar31.getVariable() == id )
    i = @@ar31.unsetVariable()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@ar31.isSetId()
    assert( @@ar31.getId() ==  "" )
    assert_equal false, @@ar31.isSetIdAttribute()
    assert( @@ar31.getIdAttribute() ==  "" )
    assert_equal false, @@ar31.isSetVariable()
    assert( @@ar31.getVariable() ==  "" )
  end

  def test_SBase_setVariable_9
    id =  "x12345";
    i = @@ea31.setVariable(id)
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal true, @@ea31.isSetId()
    assert( @@ea31.getId() == id )
    assert_equal false, @@ea31.isSetIdAttribute()
    assert( @@ea31.getIdAttribute() ==  "" )
    assert_equal true, @@ea31.isSetVariable()
    assert( @@ea31.getVariable() == id )
    i = @@ea31.unsetVariable()
    assert( i == LibSBML::LIBSBML_OPERATION_SUCCESS )
    assert_equal false, @@ea31.isSetId()
    assert( @@ea31.getId() ==  "" )
    assert_equal false, @@ea31.isSetIdAttribute()
    assert( @@ea31.getIdAttribute() ==  "" )
    assert_equal false, @@ea31.isSetVariable()
    assert( @@ea31.getVariable() ==  "" )
  end

end
