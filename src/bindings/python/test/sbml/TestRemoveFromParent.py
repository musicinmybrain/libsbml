#
# @file    TestRemoveFromParent.py
# @brief   RemoveFromParent unit tests
#
# @author  Akiya Jouraku (Python conversion)
# @author  Lucian Smith 
# 
# ====== WARNING ===== WARNING ===== WARNING ===== WARNING ===== WARNING ======
#
# DO NOT EDIT THIS FILE.
#
# This file was generated automatically by converting the file located at
# src/sbml/test/TestRemoveFromParent.cpp
# using the conversion program dev/utilities/translateTests/translateTests.pl.
# Any changes made here will be lost the next time the file is regenerated.
#
# -----------------------------------------------------------------------------
# This file is part of libSBML.  Please visit http://sbml.org for more
# information about SBML, and the latest version of libSBML.
#
# Copyright 2005-2010 California Institute of Technology.
# Copyright 2002-2005 California Institute of Technology and
#                     Japan Science and Technology Corporation.
# 
# This library is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation.  A copy of the license agreement is provided
# in the file named "LICENSE.txt" included with this software distribution
# and also available online as http://sbml.org/software/libsbml/license.html
# -----------------------------------------------------------------------------

import sys
import unittest
import libsbml


class TestRemoveFromParent(unittest.TestCase):


  def test_RemoveFromParent_alreadyRemoved(self):
    reader = libsbml.SBMLReader()
    filename = "../../sbml/sbml/test/test-data/"
    filename += "multiple-ids.xml"
    d = reader.readSBML(filename)
    if (d == None):
      pass    
    obj = d.getElementByMetaId("meta20")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta20")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta21")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta30")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta30")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta32")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta31")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta3")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta3")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta4")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta5")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta5")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta6")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta11")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta11")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta28")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta27")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta34")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta34")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta35")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta8")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta8")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta10")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta9")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta33")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta33")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta18")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta15")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta15")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta16")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta13")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta13")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta14")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta17")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta19")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta22")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta22")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta23")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta24")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta24")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta25")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta26")
    self.assertTrue( obj == None )
    d = None
    pass  

  def test_RemoveFromParent_successfulRemoves(self):
    reader = libsbml.SBMLReader()
    filename = "../../sbml/sbml/test/test-data/"
    filename += "multiple-ids.xml"
    d = reader.readSBML(filename)
    if (d == None):
      pass    
    obj = d.getElementByMetaId("meta1")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_FAILED )
    obj = d.getElementByMetaId("meta21")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta21")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta20")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta20")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta32")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta32")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta31")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta31")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta30")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta30")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta29")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta29")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta4")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta4")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta3")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta3")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta6")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta6")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta5")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta5")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta28")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta28")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta27")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta27")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta11")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta11")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta10")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta10")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta9")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta9")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta35")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta35")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta34")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta34")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta8")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta8")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta7")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta7")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta18")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta18")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta33")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta33")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta14")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta14")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta16")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta16")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta15")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta15")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta17")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta17")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta19")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta19")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta13")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta13")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta12")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta12")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta23")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta23")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta22")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta22")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta25")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta25")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta26")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta26")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta24")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta24")
    self.assertTrue( obj == None )
    obj = d.getElementByMetaId("meta2")
    self.assertTrue( obj != None )
    self.assertTrue( obj.removeFromParentAndDelete() == libsbml.LIBSBML_OPERATION_SUCCESS )
    obj = d.getElementByMetaId("meta2")
    self.assertTrue( obj == None )
    d = None
    pass  

def suite():
  suite = unittest.TestSuite()
  suite.addTest(unittest.makeSuite(TestRemoveFromParent))

  return suite

if __name__ == "__main__":
  if unittest.TextTestRunner(verbosity=1).run(suite()).wasSuccessful() :
    sys.exit(0)
  else:
    sys.exit(1)
