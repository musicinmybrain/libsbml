#
# @file    TestXMLTriple.py
# @brief   XMLTriple unit tests
#
# @author  Akiya Jouraku (Python conversion)
# @author  Michael Hucka <mhucka@caltech.edu> 
# 
# ====== WARNING ===== WARNING ===== WARNING ===== WARNING ===== WARNING ======
#
# DO NOT EDIT THIS FILE.
#
# This file was generated automatically by converting the file located at
# src/sbml/test/TestXMLTriple.c
# using the conversion program dev/utilities/translateTests/translateTests.pl.
# Any changes made here will be lost the next time the file is regenerated.
#
# -----------------------------------------------------------------------------
# This file is part of libSBML.  Please visit http://sbml.org for more
# information about SBML, and the latest version of libSBML.
#
# Copyright 2005-2010 California Institute of Technology.
# Copyright 2002-2005 California Institute of Technology and
#                     Japan Science and Technology Corporation.
# 
# This library is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation.  A copy of the license agreement is provided
# in the file named "LICENSE.txt" included with this software distribution
# and also available online as http://sbml.org/software/libsbml/license.html
# -----------------------------------------------------------------------------

import sys
import unittest
import libsbml


class TestXMLTriple(unittest.TestCase):


  def test_XMLTriple_accessWithNULL(self):
    temp = libsbml.XMLTriple()
    self.assertTrue( None.clone() == None )
    self.assertTrue( libsbml.XMLTriple(None,None,None) == None )
    self.assertTrue( None.equalTo(None) == 1 )
    self.assertTrue( None.equalTo(temp) == 0 )
    _dummyList = [ None ]; _dummyList[:] = []; del _dummyList
    self.assertTrue( None.getName() == "" )
    self.assertTrue( None.getPrefix() == "" )
    self.assertTrue( None.getPrefixedName() == "" )
    self.assertTrue( None.getURI() == "" )
    self.assertTrue( None.isEmpty() == True )
    self.assertTrue( None.notEqualTo(temp) == 1 )
    self.assertTrue( None.notEqualTo(None) == 0 )
    _dummyList = [ temp ]; _dummyList[:] = []; del _dummyList
    pass  

  def test_XMLTriple_create(self):
    t = libsbml.XMLTriple()
    self.assertTrue( t != None )
    self.assertTrue( t.isEmpty() != False )
    _dummyList = [ t ]; _dummyList[:] = []; del _dummyList
    t = libsbml.XMLTriple("attr", "uri", "prefix")
    test = t.getName()
    self.assertTrue( (  "attr" != test ) == False )
    test = t.getURI()
    self.assertTrue( (  "uri" != test ) == False )
    test = t.getPrefix()
    self.assertTrue( (  "prefix" != test ) == False )
    test = t.getPrefixedName()
    self.assertTrue( (  "prefix:attr" != test ) == False )
    self.assertTrue( t.isEmpty() == False )
    _dummyList = [ t ]; _dummyList[:] = []; del _dummyList
    t = libsbml.XMLTriple("attr", "uri", "")
    test = t.getName()
    self.assertTrue( (  "attr" != test ) == False )
    test = t.getURI()
    self.assertTrue( (  "uri" != t.getURI() ) == False )
    self.assertTrue( t.getPrefix() == "" )
    test = t.getPrefixedName()
    self.assertTrue( (  "attr" != test ) == False )
    self.assertTrue( t.isEmpty() == False )
    _dummyList = [ t ]; _dummyList[:] = []; del _dummyList
    pass  

def suite():
  suite = unittest.TestSuite()
  suite.addTest(unittest.makeSuite(TestXMLTriple))

  return suite

if __name__ == "__main__":
  if unittest.TextTestRunner(verbosity=1).run(suite()).wasSuccessful() :
    sys.exit(0)
  else:
    sys.exit(1)
